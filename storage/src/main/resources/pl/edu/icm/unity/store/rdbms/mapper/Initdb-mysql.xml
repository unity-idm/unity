<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pl.edu.icm.unity.store.rdbms.mapper.InitdbMapper">

	<sql id="dateTimeType">
		DATETIME(3)
	</sql>
	
	<sql id="primaryKeyColumn">
		ID INTEGER PRIMARY KEY AUTO_INCREMENT
	</sql>
	
	<sql id="contentsColumnBlob">
		CONTENTS MEDIUMBLOB
	</sql>

	<sql id="contentsColumn">
		CONTENTS VARBINARY(60000)
	</sql>
	
	<sql id="defaultColsBlob">
		ID INTEGER PRIMARY KEY AUTO_INCREMENT, 
		NAME VARCHAR(200), 
		CONTENTS MEDIUMBLOB
	</sql>
	<sql id="defaultColsMem">
		ID INTEGER PRIMARY KEY AUTO_INCREMENT,
		NAME VARCHAR(200),
		CONTENTS VARBINARY(60000)
	</sql>
	<sql id="defaultColsMemU">
		<include refid="defaultColsMem"/>,
		UNIQUE(NAME)
	</sql>
	<sql id="tableOpts">
		)  engine=InnoDB, character set utf8
	</sql>
	
	<update id="connect">
		select 1
	</update>
	
	<!-- Empty query - descending index is not needed in MySQL DB-->
	<sql id="sql-auditEventsTimestampDescIdx">
		update AUDIT_ENTITIES SET NAME = "dummy" where 1 = 2
	</sql>
	
	<sql id="sql-initTokenTableIdx0">
		DROP PROCEDURE IF EXISTS create_index_if_not_exists;
	</sql>
	
	<sql id="sql-initTokenTableIdx1">
		CREATE PROCEDURE create_index_if_not_exists
		(
		    given_index    VARCHAR(64),
		    given_table    VARCHAR(64),
		    given_columns  VARCHAR(64),
		    given_type  VARCHAR(64)
		)
		BEGIN
		    DECLARE IndexIsThere INTEGER;
		    SELECT COUNT(1) INTO IndexIsThere
		    FROM INFORMATION_SCHEMA.STATISTICS
		    WHERE table_name   = given_table
		    AND   index_name   = given_index;
		
		    IF IndexIsThere = 0 THEN
		        SET @sqlstmt = CONCAT('CREATE INDEX ',given_index,' ON ',given_table,' (',given_columns,')',' USING ' , given_type);
		        PREPARE st FROM @sqlstmt;
		        EXECUTE st;
		        DEALLOCATE PREPARE st;
		    ELSE
		        SELECT CONCAT('Index ',given_index,' already exists on Table ',given_table) CreateindexErrorMessage;   
		    END IF;
		END 
	</sql>
	
	<sql id="sql-initTokenTableIdx2">
		CALL create_index_if_not_exists('EXPIRES_IDX', 'TOKENS', 'EXPIRES', 'BTREE');	
	</sql>

	<sql id="sql-initTokenTableIdx3">
		CALL create_index_if_not_exists('TYPE_IDX', 'TOKENS', 'TYPE', 'HASH');
	</sql>

	<update id="resetIndex-00">
		ALTER TABLE TOKENS AUTO_INCREMENT=1;
	</update>
	<update id="resetIndex-01">
		ALTER TABLE VAR_OBJECTS AUTO_INCREMENT=1;
	</update>
	<update id="resetIndex-02">
		ALTER TABLE ATTRIBUTES AUTO_INCREMENT=1;
	</update>
	<update id="resetIndex-03">
		ALTER TABLE <include refid="io.imunity.sql.groups"/> AUTO_INCREMENT=1;
	</update>
	<update id="resetIndex-04">
		ALTER TABLE IDENTITIES AUTO_INCREMENT=1;
	</update>
	<update id="resetIndex-05">
		ALTER TABLE ENTITIES AUTO_INCREMENT=1;
	</update>
	<update id="resetIndex-06">
		ALTER TABLE IDENTITY_TYPES AUTO_INCREMENT=1;
	</update>
	<update id="resetIndex-07">
		ALTER TABLE ATTRIBUTE_TYPES AUTO_INCREMENT=1;
	</update>

</mapper>