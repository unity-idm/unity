<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pl.edu.icm.unity.store.rdbms.mapper.InitdbMapper">

	<update id="initdb-01">
CREATE TABLE IDENTITY_TYPES(
		<include refid="defaultColsMemU"/>
		<include refid="tableOpts"/>
	</update>

	<update id="initdb-02">
CREATE TABLE ATTRIBUTE_TYPES(
		<include refid="defaultColsMemU"/>,
		VALUE_SYNTAX_ID VARCHAR(64)
		<include refid="tableOpts"/>
	</update>

	<update id="initdb-03">
CREATE TABLE ENTITIES(
		<include refid="defaultColsMem"/>
		<include refid="tableOpts"/>		
	</update>

	<update id="initdb-04">
CREATE TABLE IDENTITIES(
		<include refid="defaultColsMemU"/>,
		TYPE_ID INTEGER,
		ENTITY_ID INTEGER NOT NULL,
		FOREIGN KEY (TYPE_ID) REFERENCES IDENTITY_TYPES(ID) ON DELETE CASCADE,
		FOREIGN KEY (ENTITY_ID) REFERENCES ENTITIES(ID) ON DELETE CASCADE
		<include refid="tableOpts"/>
	</update>

	<update id="initdb-05">
CREATE TABLE <include refid="io.imunity.sql.groups"/>(
		<include refid="defaultColsBlob"/>,
		PARENT_ID INTEGER,
		UNIQUE(NAME),
		FOREIGN KEY (PARENT_ID) REFERENCES <include refid="io.imunity.sql.groups"/>(ID) ON DELETE CASCADE
		<include refid="tableOpts"/>		
	</update>

	<update id="initdb-06">
CREATE TABLE ATTRIBUTES(
		<include refid="primaryKeyColumn"/>,
		TYPE_ID INTEGER NOT NULL,
		ENTITY_ID INTEGER NOT NULL,
		GROUP_ID INTEGER NOT NULL,
		<include refid="contentsColumnBlob"/>,
		FOREIGN KEY (ENTITY_ID) REFERENCES ENTITIES(ID) ON DELETE CASCADE,	
		FOREIGN KEY (TYPE_ID) REFERENCES ATTRIBUTE_TYPES(ID) ON DELETE CASCADE,
		FOREIGN KEY (GROUP_ID) REFERENCES <include refid="io.imunity.sql.groups"/>(ID) ON DELETE CASCADE	
		<include refid="tableOpts"/>		
	</update>

	<update id="initdb-07">
CREATE TABLE GROUP_ENTITIES(
		ENTITY_ID INTEGER NOT NULL,
		GROUP_ID INTEGER NOT NULL,
		<include refid="contentsColumn"/>,
		PRIMARY KEY (ENTITY_ID, GROUP_ID),
		FOREIGN KEY (ENTITY_ID) REFERENCES ENTITIES(ID) ON DELETE CASCADE,
		FOREIGN KEY (GROUP_ID) REFERENCES <include refid="io.imunity.sql.groups"/>(ID) ON DELETE CASCADE		
		<include refid="tableOpts"/>		
	</update>

	<update id="initdb-09">
CREATE TABLE VAR_OBJECTS(
		<include refid="defaultColsMem"/>,
		TYPE VARCHAR(100),
		LAST_UPDATE <include refid="dateTimeType"/> NOT NULL,
		UNIQUE(NAME, TYPE)
		<include refid="tableOpts"/>		
	</update>
	
	<sql id="sql-files">
CREATE TABLE IF NOT EXISTS FILES(
		<include refid="pl.edu.icm.unity.store.rdbms.mapper.InitdbMapper.defaultColsBlob"/>,
		OWNER_TYPE VARCHAR(100),
		OWNER_ID VARCHAR(100),
		LAST_UPDATE <include refid="pl.edu.icm.unity.store.rdbms.mapper.InitdbMapper.dateTimeType"/> NOT NULL,
		UNIQUE(NAME)
		<include refid="pl.edu.icm.unity.store.rdbms.mapper.InitdbMapper.tableOpts"/>
	</sql>
	
	<update id="initdb-10">
		<include refid="sql-files"/>
	</update>

	<sql id="sql-initTokensTable">
CREATE TABLE TOKENS(
		<include refid="defaultColsBlob"/>,
		TYPE VARCHAR(100),
		ENTITY_ID INTEGER NULL,
		CREATED <include refid="dateTimeType"/> NOT NULL,
		EXPIRES <include refid="dateTimeType"/>,
		UNIQUE(NAME, TYPE),
	    FOREIGN KEY (ENTITY_ID) REFERENCES ENTITIES(ID) ON DELETE CASCADE 
		<include refid="tableOpts"/>
	</sql>

	<update id="initdb-11">
		<include refid="sql-initTokensTable"/>
	</update>
	
	<sql id="sql-initEventsTable">
CREATE TABLE EVENTS_QUEUE(
		<include refid="primaryKeyColumn"/>,
		LISTENER_ID 	VARCHAR(256),
		NEXT_PROCESSING <include refid="dateTimeType"/>,
		FAILURES		INTEGER,
		<include refid="contentsColumnBlob"/>
		<include refid="tableOpts"/>		
	</sql>
	<sql id="sql-initEventsTableIdx">
		CREATE INDEX EVENTS_DATES_IDX ON EVENTS_QUEUE(NEXT_PROCESSING)
	</sql>
	
	<update id="initdb-12">
		<include refid="sql-initEventsTable"/>
	</update>	

	<update id="initdb-13">
		<include refid="sql-initEventsTableIdx"/>	
	</update>

	<sql id="sql-auditEntities">
CREATE TABLE AUDIT_ENTITIES (
		<include refid="pl.edu.icm.unity.store.rdbms.mapper.InitdbMapper.primaryKeyColumn"/>,
		ENTITY_ID INTEGER NOT NULL,
		NAME VARCHAR(200),
		EMAIL VARCHAR(200),
		UNIQUE(ENTITY_ID, NAME, EMAIL)
		<include refid="pl.edu.icm.unity.store.rdbms.mapper.InitdbMapper.tableOpts"/>
	</sql>
	
	<sql id="sql-auditEvents">	
CREATE TABLE AUDIT_EVENTS (
		<include refid="pl.edu.icm.unity.store.rdbms.mapper.InitdbMapper.primaryKeyColumn"/>,
		TIMESTAMP <include refid="pl.edu.icm.unity.store.rdbms.mapper.InitdbMapper.dateTimeType"/> NOT NULL,
		TYPE VARCHAR(100) NOT NULL,
		NAME VARCHAR(200) NOT NULL,
		SUBJECT_ID INTEGER,
		INITIATOR_ID INTEGER NOT NULL,
		ACTION VARCHAR(100) NOT NULL,
 		FOREIGN KEY (SUBJECT_ID) REFERENCES AUDIT_ENTITIES(ID) ON DELETE CASCADE,
 		FOREIGN KEY (INITIATOR_ID) REFERENCES AUDIT_ENTITIES(ID) ON DELETE CASCADE,
		<include refid="pl.edu.icm.unity.store.rdbms.mapper.InitdbMapper.contentsColumnBlob"/>
		<include refid="pl.edu.icm.unity.store.rdbms.mapper.InitdbMapper.tableOpts"/>
	</sql>
	
	<sql id="sql-auditEventsIdx">	
CREATE INDEX AUDIT_EVENTS_TIMESTAMP_IDX ON AUDIT_EVENTS(TIMESTAMP);
	</sql>
	
	<sql id="sql-auditTags">	
CREATE TABLE AUDIT_TAGS (
		<include refid="pl.edu.icm.unity.store.rdbms.mapper.InitdbMapper.primaryKeyColumn"/>,
		TAG VARCHAR(200) NOT NULL,
		UNIQUE(TAG)
		<include refid="pl.edu.icm.unity.store.rdbms.mapper.InitdbMapper.tableOpts"/>
	</sql>
	
	<sql id="sql-auditEventsTags">	
CREATE TABLE AUDIT_EVENTS_TAGS (
		EVENT_ID INTEGER NOT NULL,
		TAG_ID INTEGER,
		UNIQUE(EVENT_ID, TAG_ID),
		FOREIGN KEY (EVENT_ID) REFERENCES AUDIT_EVENTS(ID) ON DELETE CASCADE,
		FOREIGN KEY (TAG_ID) REFERENCES AUDIT_TAGS(ID) ON DELETE CASCADE
		<include refid="pl.edu.icm.unity.store.rdbms.mapper.InitdbMapper.tableOpts"/>
	</sql>

	<update id="initdb-14">
		<include refid="sql-auditEntities"/>
	</update>
	
	<update id="initdb-15">	
		<include refid="sql-auditEvents"/>
	</update>
	
	<update id="initdb-16">	
		<include refid="sql-auditEventsIdx"/>
	</update>
	
	<update id="initdb-17-requireCommit">	
		<include refid="sql-auditTags"/>
	</update>
	
	<update id="initdb-18">	
		<include refid="sql-auditEventsTags"/>
	</update>

	<update id="initdb-19">
		<include refid="sql-auditEventsTimestampDescIdx"/>
	</update>
	
	<sql id="sql-initAttributesLookupTable">
CREATE TABLE ATTRIBUTES_LOOKUP (
		<include refid="pl.edu.icm.unity.store.rdbms.mapper.InitdbMapper.primaryKeyColumn"/>,
		KEYWORD VARCHAR(100),
		ATTRIBUTE_ID INTEGER NOT NULL,
	    FOREIGN KEY (ATTRIBUTE_ID) REFERENCES ATTRIBUTES(ID) ON DELETE CASCADE
		<include refid="pl.edu.icm.unity.store.rdbms.mapper.InitdbMapper.tableOpts"/>		
	</sql>
	<sql id="sql-initAttributesLookupTableIdx">
		CREATE INDEX ATTRIBUTES_LOOKUP_KEYWORD_IDX ON ATTRIBUTES_LOOKUP(KEYWORD)
	</sql>
	
	<update id="initdb-20">
		<include refid="sql-initAttributesLookupTable"/>
	</update>	

	<update id="initdb-21">
		<include refid="sql-initAttributesLookupTableIdx"/>	
	</update>
	
	<sql id="sql-policyDocuments">
CREATE TABLE POLICY_DOCUMENTS (
		<include refid="pl.edu.icm.unity.store.rdbms.mapper.InitdbMapper.defaultColsBlob"/>
		<include refid="pl.edu.icm.unity.store.rdbms.mapper.InitdbMapper.tableOpts"/>	
	</sql>
	
	<update id="initdb-22">
		<include refid="sql-policyDocuments"/>
	</update>
	
	<sql id="sql-messages">
CREATE TABLE MESSAGES (
		<include refid="pl.edu.icm.unity.store.rdbms.mapper.InitdbMapper.defaultColsMem"/>,
		LOCALE VARCHAR(100),
		UNIQUE(NAME, LOCALE)
		<include refid="pl.edu.icm.unity.store.rdbms.mapper.InitdbMapper.tableOpts"/>	
	</sql>
	
	<update id="initdb-23">
		<include refid="sql-messages"/>
	</update>
	
	<sql id="sql-idpstatistics">
CREATE TABLE IDP_STATISTICS (
		<include refid="pl.edu.icm.unity.store.rdbms.mapper.InitdbMapper.primaryKeyColumn"/>,
		TIMESTAMP <include refid="pl.edu.icm.unity.store.rdbms.mapper.InitdbMapper.dateTimeType"/> NOT NULL,
		IDP_ENDPOINT_ID VARCHAR(300) NOT NULL,
		IDP_ENDPOINT_NAME VARCHAR(300),
		CLIENT_ID VARCHAR(300) NOT NULL,
		CLIENT_NAME VARCHAR(300),
		STATUS VARCHAR(100) NOT NULL
		<include refid="pl.edu.icm.unity.store.rdbms.mapper.InitdbMapper.tableOpts"/>
	</sql>
	
	<update id="initdb-24">
		<include refid="sql-idpstatistics"/>
	</update>
	

	<update id="initdb-25-00">
		<include refid="pl.edu.icm.unity.store.rdbms.mapper.InitdbMapper.sql-initTokenTableIdx0"/>
	</update>

	<update id="initdb-25-01">
		<include refid="pl.edu.icm.unity.store.rdbms.mapper.InitdbMapper.sql-initTokenTableIdx1"/>
	</update>
	
	<update id="initdb-25-02">
		<include refid="pl.edu.icm.unity.store.rdbms.mapper.InitdbMapper.sql-initTokenTableIdx2"/>
	</update>
	

	<update id="initdb-99">
CREATE TABLE UVOS_FLAG(
		VAL VARCHAR(128)
		<include refid="tableOpts"/>
	</update>

	<insert id="initVersion" parameterType="string">
INSERT INTO UVOS_FLAG (VAL) VALUES (#{value});
	</insert>
</mapper>