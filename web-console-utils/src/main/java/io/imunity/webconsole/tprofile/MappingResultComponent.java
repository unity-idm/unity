/*
 * Copyright (c) 2013 ICM Uniwersytet Warszawski All rights reserved.
 * See LICENCE.txt file for licensing information.
 */
package io.imunity.webconsole.tprofile;

import java.util.Collections;
import java.util.List;

import com.vaadin.shared.ui.grid.HeightMode;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Grid;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.VerticalLayout;

import pl.edu.icm.unity.base.message.MessageSource;
import pl.edu.icm.unity.engine.api.translation.in.MappedAttribute;
import pl.edu.icm.unity.engine.api.translation.in.MappedGroup;
import pl.edu.icm.unity.engine.api.translation.in.MappedIdentity;
import pl.edu.icm.unity.engine.api.translation.in.MappingResult;
import pl.edu.icm.unity.webui.common.Styles;
import pl.edu.icm.unity.webui.common.safehtml.HtmlLabel;

/**
 * Component that displays Mapping Result.
 * 
 * @author Roman Krysinski
 */
public class MappingResultComponent extends CustomComponent 
{
	
	private VerticalLayout mainLayout;
	private VerticalLayout mappingResultWrap;
	private VerticalLayout groupsWrap;
	private Label groupsTitleLabel;
	private VerticalLayout attrsWrap;
	private Grid<MappedAttribute> attrsTable;
	private Grid<MappedGroup> groupsTable;
	private Label attrsTitleLabel;
	private VerticalLayout idsWrap;
	private Grid<MappedIdentity> idsTable;
	private Label idsTitleLabel;
	private HorizontalLayout titleWrap;
	private Label noneLabel;
	private HtmlLabel titleLabel;
	private MessageSource msg;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 * @param msg 
	 */
	public MappingResultComponent(MessageSource msg) 
	{
		this.msg = msg;

		buildMainLayout();
		setCompositionRoot(mainLayout);
		
		mappingResultWrap.setStyleName(Styles.smallMargin.toString());
		setVisible(false);
		initLabels();
		initTables();
	}

	private void initLabels() 
	{
		titleLabel.setHtmlValue("MappingResultComponent.title");
		idsTitleLabel.setValue(msg.getMessage("MappingResultComponent.idsTitle"));
		attrsTitleLabel.setValue(msg.getMessage("MappingResultComponent.attrsTitle"));
		groupsTitleLabel.setValue(msg.getMessage("MappingResultComponent.groupsTitle"));
		noneLabel.setValue(msg.getMessage("MappingResultComponent.none"));
	}
	
	private void initTables()
	{
		idsTable.addColumn(v -> v.getMode())
				.setCaption(msg.getMessage("MappingResultComponent.mode"));

		idsTable.addColumn(v -> v.getIdentity().getTypeId())
				.setCaption(msg.getMessage("MappingResultComponent.idsTable.type"));

		idsTable.addColumn(v -> v.getIdentity().getValue()).setCaption(
				msg.getMessage("MappingResultComponent.idsTable.value"));

		attrsTable.addColumn(v -> v.getMode())
				.setCaption(msg.getMessage("MappingResultComponent.mode"));
		attrsTable.addColumn(v -> v.getAttribute().getName()).setCaption(
				msg.getMessage("MappingResultComponent.attrsTable.name"));
		attrsTable.addColumn(v -> v.getAttribute().getValues()).setCaption(
				msg.getMessage("MappingResultComponent.attrsTable.value"));

		groupsTable.addColumn(v -> v.getCreateIfMissing())
				.setCaption(msg.getMessage("MappingResultComponent.mode"));
		groupsTable.addColumn(v -> v.getGroup()).setCaption(
				msg.getMessage("MappingResultComponent.groupsTable.group"));
	}
	

	public void displayMappingResult(MappingResult mappingResult, String inputTranslationProfile) 
	{
		titleLabel.setHtmlValue("DryRun.MappingResultComponent.title", inputTranslationProfile);
		noneLabel.setValue("");
		displayMappingResult(mappingResult);
	}	
	
	public void displayMappingResult(MappingResult mappingResult)
	{
		if (mappingResult == null 
				|| (mappingResult.getIdentities().isEmpty()
					&& mappingResult.getAttributes().isEmpty()
					&& mappingResult.getGroups().isEmpty()))
		{
			displayItsTables(Collections.<MappedIdentity>emptyList());
			displayAttrsTable(Collections.<MappedAttribute>emptyList());
			displayGroups(Collections.<MappedGroup>emptyList());
			noneLabel.setVisible(true);
		} else
		{
			displayItsTables(mappingResult.getIdentities());
			displayAttrsTable(mappingResult.getAttributes());
			displayGroups(mappingResult.getGroups());
			noneLabel.setVisible(false);
		}
		setVisible(true);
	}

	private void displayItsTables(List<MappedIdentity> identities) 
	{
		idsTable.setItems(Collections.emptyList());
		if (identities.isEmpty())
		{
			idsWrap.setVisible(false);
		} else
		{
			idsWrap.setVisible(true);
			idsTable.setItems(identities);		
			idsTable.setHeightMode(HeightMode.ROW);
			idsTable.setHeightByRows(identities.size());		
		}
	}
	
	private void displayAttrsTable(List<MappedAttribute> attributes) 
	{
		attrsTable.setItems(Collections.emptyList());
		if (attributes.isEmpty())
		{
			attrsWrap.setVisible(false);
		} else
		{
			attrsWrap.setVisible(true);
			attrsTable.setItems(attributes);
			attrsTable.setHeightMode(HeightMode.ROW);
			attrsTable.setHeightByRows(attributes.size());		
			
		}
	}
	
	private void displayGroups(List<MappedGroup> groups) 
	{
		groupsTable.setItems(Collections.emptyList());
		if (groups.isEmpty())
		{
			groupsWrap.setVisible(false);
		} else
		{
			groupsWrap.setVisible(true);	
			groupsTable.setItems(groups);
			groupsTable.setHeightMode(HeightMode.ROW);
			groupsTable.setHeightByRows(groups.size());		
		}
	}
	
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setSizeFull();
		mainLayout.setMargin(false);
		
		// top-level component properties
		setSizeFull();
		
		// titleWrap
		titleWrap = buildTitleWrap();
		mainLayout.addComponent(titleWrap);
		
		// mappingResultWrap
		mappingResultWrap = buildMappingResultWrap();
		mainLayout.addComponent(mappingResultWrap);
		mainLayout.setExpandRatio(mappingResultWrap, 1.0f);
		
		return mainLayout;
	}

	private HorizontalLayout buildTitleWrap() {
		// common part: create layout
		titleWrap = new HorizontalLayout();
		titleWrap.setWidth("-1px");
		titleWrap.setHeight("-1px");
		titleWrap.setMargin(false);
		//titleWrap.setSpacing(true);
		
		// titleLabel
		titleLabel = new HtmlLabel(msg);
		titleLabel.setWidth("-1px");
		titleLabel.setHeight("-1px");
		titleWrap.addComponent(titleLabel);
		
		// noneLabel
		noneLabel = new Label();
		noneLabel.setWidth("-1px");
		noneLabel.setHeight("-1px");
		noneLabel.setValue("Label");
		titleWrap.addComponent(noneLabel);
		
		return titleWrap;
	}

	private VerticalLayout buildMappingResultWrap() {
		// common part: create layout
		mappingResultWrap = new VerticalLayout();
		mappingResultWrap.setHeight("-1px");
		
		// idsWrap
		idsWrap = buildIdsWrap();
		mappingResultWrap.addComponent(idsWrap);
		
		// attrsWrap
		attrsWrap = buildAttrsWrap();
		mappingResultWrap.addComponent(attrsWrap);
		
		// groupsWrap
		groupsWrap = buildGroupsWrap();
		mappingResultWrap.addComponent(groupsWrap);
		
		return mappingResultWrap;
	}

	private VerticalLayout buildIdsWrap() {
		// common part: create layout
		idsWrap = new VerticalLayout();
		idsWrap.setHeight("-1px");
		idsWrap.setMargin(false);
		
		// idsTitleLabel
		idsTitleLabel = new Label();
		idsTitleLabel.setWidth("-1px");
		idsTitleLabel.setHeight("-1px");
		idsTitleLabel.setValue("Label");
		idsWrap.addComponent(idsTitleLabel);
		
		// idsTable
		idsTable = new Grid<>();
		idsTable.setWidth("100.0%");
		idsTable.setHeight("-1px");
		idsWrap.addComponent(idsTable);
		
		return idsWrap;
	}

	private VerticalLayout buildAttrsWrap() {
		// common part: create layout
		attrsWrap = new VerticalLayout();
		attrsWrap.setHeight("-1px");
		attrsWrap.setMargin(false);
		
		// attrsTitleLabel
		attrsTitleLabel = new Label();
		attrsTitleLabel.setWidth("-1px");
		attrsTitleLabel.setHeight("-1px");
		attrsTitleLabel.setValue("Label");
		attrsWrap.addComponent(attrsTitleLabel);
		
		// attrsTable
		attrsTable = new Grid<>();
		attrsTable.setWidth("100.0%");
		attrsTable.setHeight("-1px");
		attrsWrap.addComponent(attrsTable);
		
		return attrsWrap;
	}

	private VerticalLayout buildGroupsWrap() {
		// common part: create layout
		groupsWrap = new VerticalLayout();
		groupsWrap.setHeight("-1px");
		groupsWrap.setMargin(false);
		
		// groupsTitleLabel
		groupsTitleLabel = new Label();
		groupsTitleLabel.setWidth("-1px");
		groupsTitleLabel.setHeight("-1px");
		groupsTitleLabel.setValue("Label");
		groupsWrap.addComponent(groupsTitleLabel);
		
		// groupsLabel
		groupsTable =  new Grid<>();
		groupsTable.setWidth("100.0%");
		groupsTable.setHeight("-1px");
		groupsWrap.addComponent(groupsTable);
		
		return groupsWrap;
	}
}
