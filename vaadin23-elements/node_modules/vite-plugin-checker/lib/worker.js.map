{"version":3,"sources":["../src/worker.ts"],"sourcesContent":["import { ConfigEnv } from 'vite'\nimport { parentPort, Worker, workerData } from 'worker_threads'\n\nimport { ACTION_TYPES } from './types'\n\nimport type {\n  ServeChecker,\n  ConfigureServeChecker,\n  ConfigAction,\n  ConfigureServerAction,\n  CheckerDiagnostic,\n  BuildCheckBin,\n  ServeAndBuildChecker,\n  SharedConfig,\n  UnrefAction,\n  BuildInCheckers,\n} from './types'\n\ninterface WorkerScriptOptions {\n  absFilename: string\n  buildBin: BuildCheckBin\n  serverChecker: ServeChecker\n}\n\nexport interface Script<T> {\n  mainScript: () => (config: T & SharedConfig, env: ConfigEnv) => ServeAndBuildChecker\n  workerScript: () => void\n}\n\nexport function createScript<T extends Partial<BuildInCheckers>>({\n  absFilename,\n  buildBin,\n  serverChecker,\n}: WorkerScriptOptions): Script<T> {\n  type CheckerConfig = T & SharedConfig\n\n  return {\n    mainScript: () => {\n      // initialized in main thread\n      const createWorker = (\n        checkerConfig: CheckerConfig,\n        env: ConfigEnv\n      ): ConfigureServeChecker => {\n        const isBuild = env.command === 'build'\n        const worker = new Worker(absFilename, {\n          workerData: { env, checkerConfig },\n        })\n\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        return {\n          worker,\n          config: (config) => {\n            if (isBuild) return // just run the command\n\n            const configAction: ConfigAction = { type: ACTION_TYPES.config, payload: config }\n            worker.postMessage(configAction)\n          },\n          configureServer: (serverConfig) => {\n            const configureServerAction: ConfigureServerAction = {\n              type: ACTION_TYPES.configureServer,\n              payload: serverConfig,\n            }\n\n            worker.postMessage(configureServerAction)\n          },\n        }\n      }\n\n      return (config, env) => ({\n        serve: createWorker(config, env),\n        build: { buildBin },\n      })\n    },\n    workerScript: () => {\n      // runs in worker thread\n      let diagnostic: CheckerDiagnostic | null = null\n      if (!parentPort) throw Error('should have parentPort as file runs in worker thread')\n      const isBuild = workerData.env.command === 'build'\n      // only run bin command and do not listen message in build mode\n\n      const port = parentPort.on(\n        'message',\n        (action: ConfigAction | ConfigureServerAction | UnrefAction) => {\n          switch (action.type) {\n            case ACTION_TYPES.config: {\n              const checkerConfig: T & SharedConfig = workerData.checkerConfig\n              diagnostic = serverChecker.createDiagnostic(checkerConfig)\n              diagnostic.config(action.payload)\n              break\n            }\n            case ACTION_TYPES.configureServer:\n              if (!diagnostic)\n                throw Error('diagnostic should be initialized in `config` hook of Vite')\n              diagnostic.configureServer(action.payload)\n              break\n            case ACTION_TYPES.unref:\n              port.unref()\n              break\n          }\n        }\n      )\n\n      if (isBuild) {\n        port.unref()\n      }\n    },\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,4BAA+C;AAE/C,mBAA6B;AA0BtB,sBAA0D;AAAA,EAC/D;AAAA,EACA;AAAA,EACA;AAAA,GACiC;AAGjC,SAAO;AAAA,IACL,YAAY,MAAM;AAEhB,YAAM,eAAe,CACnB,eACA,QAC0B;AAC1B,cAAM,UAAU,IAAI,YAAY;AAChC,cAAM,SAAS,IAAI,6BAAO,aAAa;AAAA,UACrC,YAAY,EAAE,KAAK,cAAc;AAAA,QACnC,CAAC;AAGD,eAAO;AAAA,UACL;AAAA,UACA,QAAQ,CAAC,WAAW;AAClB,gBAAI;AAAS;AAEb,kBAAM,eAA6B,EAAE,MAAM,0BAAa,QAAQ,SAAS,OAAO;AAChF,mBAAO,YAAY,YAAY;AAAA,UACjC;AAAA,UACA,iBAAiB,CAAC,iBAAiB;AACjC,kBAAM,wBAA+C;AAAA,cACnD,MAAM,0BAAa;AAAA,cACnB,SAAS;AAAA,YACX;AAEA,mBAAO,YAAY,qBAAqB;AAAA,UAC1C;AAAA,QACF;AAAA,MACF;AAEA,aAAO,CAAC,QAAQ,QAAS;AAAA,QACvB,OAAO,aAAa,QAAQ,GAAG;AAAA,QAC/B,OAAO,EAAE,SAAS;AAAA,MACpB;AAAA,IACF;AAAA,IACA,cAAc,MAAM;AAElB,UAAI,aAAuC;AAC3C,UAAI,CAAC;AAAY,cAAM,MAAM,sDAAsD;AACnF,YAAM,UAAU,iCAAW,IAAI,YAAY;AAG3C,YAAM,OAAO,iCAAW,GACtB,WACA,CAAC,WAA+D;AAC9D,gBAAQ,OAAO;AAAA,eACR,0BAAa,QAAQ;AACxB,kBAAM,gBAAkC,iCAAW;AACnD,yBAAa,cAAc,iBAAiB,aAAa;AACzD,uBAAW,OAAO,OAAO,OAAO;AAChC;AAAA,UACF;AAAA,eACK,0BAAa;AAChB,gBAAI,CAAC;AACH,oBAAM,MAAM,2DAA2D;AACzE,uBAAW,gBAAgB,OAAO,OAAO;AACzC;AAAA,eACG,0BAAa;AAChB,iBAAK,MAAM;AACX;AAAA;AAAA,MAEN,CACF;AAEA,UAAI,SAAS;AACX,aAAK,MAAM;AAAA,MACb;AAAA,IACF;AAAA,EACF;AACF;","names":[]}