{"version":3,"sources":["../../../src/checkers/vueTsc/main.ts"],"sourcesContent":["import os from 'os'\nimport path from 'path'\nimport invariant from 'tiny-invariant'\nimport ts from 'typescript'\nimport { parentPort } from 'worker_threads'\n\nimport { Checker } from '../../Checker'\nimport {\n  consoleLog,\n  diagnosticToRuntimeError,\n  diagnosticToTerminalLog,\n  ensureCall,\n  normalizeVueTscDiagnostic,\n  toViteCustomPayload,\n  wrapCheckerSummary,\n} from '../../logger'\nimport { ACTION_TYPES, CreateDiagnostic, DiagnosticLevel, DiagnosticToRuntime } from '../../types'\nimport { prepareVueTsc } from './prepareVueTsc'\n\nconst createDiagnostic: CreateDiagnostic<'vueTsc'> = (pluginConfig) => {\n  let overlay = true\n  let terminal = true\n  let currDiagnostics: DiagnosticToRuntime[] = []\n\n  return {\n    config: ({ enableOverlay, enableTerminal }) => {\n      overlay = enableOverlay\n      terminal = enableTerminal\n    },\n    configureServer({ root }) {\n      invariant(pluginConfig.vueTsc, 'config.vueTsc should be `false`')\n\n      const { targetTsDir } = prepareVueTsc()\n\n      const vueTs = require(path.resolve(targetTsDir, 'lib/tsc.js'))\n\n      const finalConfig =\n        pluginConfig.vueTsc === true\n          ? { root, tsconfigPath: 'tsconfig.json' }\n          : {\n              root: pluginConfig.vueTsc.root ?? root,\n              tsconfigPath: pluginConfig.vueTsc.tsconfigPath ?? 'tsconfig.json',\n            }\n\n      let configFile: string | undefined\n\n      configFile = vueTs.findConfigFile(\n        finalConfig.root,\n        vueTs.sys.fileExists,\n        finalConfig.tsconfigPath\n      )\n\n      if (configFile === undefined) {\n        throw Error(\n          `Failed to find a valid tsconfig.json: ${finalConfig.tsconfigPath} at ${finalConfig.root} is not a valid tsconfig`\n        )\n      }\n\n      let logChunk = ''\n\n      // https://github.com/microsoft/TypeScript/blob/a545ab1ac2cb24ff3b1aaf0bfbfb62c499742ac2/src/compiler/watch.ts#L12-L28\n      const reportDiagnostic = (diagnostic: ts.Diagnostic) => {\n        const normalizedDiagnostic = normalizeVueTscDiagnostic(diagnostic)\n        if (normalizedDiagnostic === null) {\n          return\n        }\n\n        currDiagnostics.push(diagnosticToRuntimeError(normalizedDiagnostic))\n        logChunk += os.EOL + diagnosticToTerminalLog(normalizedDiagnostic, 'vue-tsc')\n      }\n\n      const reportWatchStatusChanged: ts.WatchStatusReporter = (\n        diagnostic,\n        newLine,\n        options,\n        errorCount\n        // eslint-disable-next-line max-params\n      ) => {\n        if (diagnostic.code === 6031) return\n        // https://github.com/microsoft/TypeScript/issues/32542\n        // https://github.com/microsoft/TypeScript/blob/dc237b317ed4bbccd043ddda802ffde00362a387/src/compiler/diagnosticMessages.json#L4086-L4088\n        switch (diagnostic.code) {\n          case 6031:\n          case 6032:\n            // clear current error and use the newer errors\n            logChunk = ''\n            // currErr = null\n            currDiagnostics = []\n            return\n          case 6193: // 1 Error\n          case 6194: // 0 errors or 2+ errors\n            if (overlay) {\n              parentPort?.postMessage({\n                type: ACTION_TYPES.overlayError,\n                payload: toViteCustomPayload('vue-tsc', currDiagnostics),\n              })\n            }\n        }\n\n        ensureCall(() => {\n          if (errorCount === 0) {\n            logChunk = ''\n          }\n\n          if (terminal) {\n            consoleLog(\n              logChunk + os.EOL + wrapCheckerSummary('vue-tsc', diagnostic.messageText.toString())\n            )\n          }\n        })\n      }\n\n      // https://github.com/microsoft/TypeScript/issues/32385\n      // https://github.com/microsoft/TypeScript/pull/33082/files\n      const createProgram = vueTs.createSemanticDiagnosticsBuilderProgram\n\n      const host = vueTs.createWatchCompilerHost(\n        configFile,\n        { noEmit: true },\n        vueTs.sys,\n        createProgram,\n        reportDiagnostic,\n        reportWatchStatusChanged\n      )\n\n      vueTs.createWatchProgram(host)\n    },\n  }\n}\n\nexport class VueTscChecker extends Checker<'vueTsc'> {\n  public constructor() {\n    super({\n      name: 'vueTsc',\n      absFilePath: __filename,\n      build: {\n        buildBin: (config) => {\n          if (typeof config.vueTsc === 'object') {\n            const { root, tsconfigPath } = config.vueTsc\n\n            let args = ['--noEmit']\n            // Custom config path\n            if (tsconfigPath) {\n              const fullConfigPath = root ? path.join(root, tsconfigPath) : tsconfigPath\n              args = args.concat(['-p', fullConfigPath])\n            }\n\n            return ['vue-tsc', args]\n          }\n\n          return ['vue-tsc', ['--noEmit']]\n        },\n      },\n      createDiagnostic,\n    })\n  }\n\n  public init() {\n    const createServeAndBuild = super.initMainThread()\n    module.exports.createServeAndBuild = createServeAndBuild\n\n    super.initWorkerThread()\n  }\n}\n\nconst tscChecker = new VueTscChecker()\ntscChecker.prepare()\ntscChecker.init()\n"],"mappings":"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","names":[]}