{
  "$schema": "https://json.schemastore.org/web-types",
  "name": "@vaadin/login",
  "version": "23.2.0",
  "description-markup": "markdown",
  "contributions": {
    "html": {
      "elements": [
        {
          "name": "vaadin-login-form",
          "description": "`<vaadin-login-form>` is a Web Component providing an easy way to require users\nto log in into an application. Note that component has no shadowRoot.\n\n```\n<vaadin-login-form></vaadin-login-form>\n```\n\nComponent has to be accessible from the `document` layer in order to allow password managers to work properly with form values.\nUsing `<vaadin-login-overlay>` allows to always attach the component to the document body.\n\n### Styling\n\nThe component doesn't have a shadowRoot, so the `<form>` and input fields can be styled from a global scope.\nUse `<vaadin-login-form-wrapper>` themable component to apply styles.\n\nThe following shadow DOM parts of the `<vaadin-login-form-wrapper>` are available for styling:\n\nPart name      | Description\n---------------|---------------------------------------------------------|\n`form`         | Container for the entire component's content\n`form-title`   | Title of the login form\n`error-message`| Container for error message, contains error-message-title and error-message-description parts. Hidden by default.\n`error-message-title`       | Container for error message title\n`error-message-description` | Container for error message description\n`error-message-description` | Container for error message description\n`footer`  | Container additional information text from `i18n` object\n\nSee [Styling Components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components) documentation.",
          "attributes": [
            {
              "name": "action",
              "description": "If set, a synchronous POST call will be fired to the path defined.\nThe `login` event is also dispatched, so `event.preventDefault()` can be called to prevent the POST call.",
              "value": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            {
              "name": "disabled",
              "description": "If set, disable the \"Log in\" button and prevent user from submitting login form.\nIt is re-enabled automatically, when error is set to true, allowing form resubmission\nafter user makes changes.",
              "value": {
                "type": [
                  "boolean"
                ]
              }
            },
            {
              "name": "error",
              "description": "If set, the error message is shown. The message is hidden by default.\nWhen set, it changes the disabled state of the submit button.",
              "value": {
                "type": [
                  "boolean"
                ]
              }
            },
            {
              "name": "no-forgot-password",
              "description": "Whether to hide the forgot password button. The button is visible by default.",
              "value": {
                "type": [
                  "boolean"
                ]
              }
            },
            {
              "name": "no-autofocus",
              "description": "If set, the user name field automatically receives focus when the component is attached to the document.",
              "value": {
                "type": [
                  "boolean"
                ]
              }
            },
            {
              "name": "theme",
              "description": "The theme variants to apply to the component.",
              "value": {
                "type": [
                  "string",
                  "null",
                  "undefined"
                ]
              }
            }
          ],
          "js": {
            "properties": [
              {
                "name": "action",
                "description": "If set, a synchronous POST call will be fired to the path defined.\nThe `login` event is also dispatched, so `event.preventDefault()` can be called to prevent the POST call.",
                "value": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              {
                "name": "disabled",
                "description": "If set, disable the \"Log in\" button and prevent user from submitting login form.\nIt is re-enabled automatically, when error is set to true, allowing form resubmission\nafter user makes changes.",
                "value": {
                  "type": [
                    "boolean"
                  ]
                }
              },
              {
                "name": "error",
                "description": "If set, the error message is shown. The message is hidden by default.\nWhen set, it changes the disabled state of the submit button.",
                "value": {
                  "type": [
                    "boolean"
                  ]
                }
              },
              {
                "name": "noForgotPassword",
                "description": "Whether to hide the forgot password button. The button is visible by default.",
                "value": {
                  "type": [
                    "boolean"
                  ]
                }
              },
              {
                "name": "noAutofocus",
                "description": "If set, the user name field automatically receives focus when the component is attached to the document.",
                "value": {
                  "type": [
                    "boolean"
                  ]
                }
              },
              {
                "name": "i18n",
                "description": "The object used to localize this component.\nFor changing the default localization, change the entire\n_i18n_ object or just the property you want to modify.\n\nThe object has the following JSON structure (by default it doesn't include `additionalInformation`\nand `header` sections, `header` can be added to override `title` and `description` properties\nin `vaadin-login-overlay`):\n\n```\n{\n  header: {\n    title: 'App name',\n    description: 'Inspiring application description'\n  },\n  form: {\n    title: 'Log in',\n    username: 'Username',\n    password: 'Password',\n    submit: 'Log in',\n    forgotPassword: 'Forgot password'\n  },\n  errorMessage: {\n    title: 'Incorrect username or password',\n    message: 'Check that you have entered the correct username and password and try again.'\n  },\n  additionalInformation: 'In case you need to provide some additional info for the user.'\n}\n```",
                "value": {
                  "type": [
                    "LoginI18n"
                  ]
                }
              }
            ],
            "events": [
              {
                "name": "forgot-password",
                "description": "Fired when user clicks on the \"Forgot password\" button."
              },
              {
                "name": "login",
                "description": "Fired when an user submits the login.\nThe event contains `username` and `password` values in the `detail` property."
              }
            ]
          }
        },
        {
          "name": "vaadin-login-overlay",
          "description": "`<vaadin-login-overlay>` is a wrapper of the `<vaadin-login-form>` which opens a login form in an overlay and\nhaving an additional `brand` part for application title and description. Using `<vaadin-login-overlay>` allows\npassword managers to work with login form.\n\n```\n<vaadin-login-overlay opened></vaadin-login-overlay>\n```\n\n### Styling\n\nThe component doesn't have a shadowRoot, so the `<form>` and input fields can be styled from a global scope.\nUse `<vaadin-login-overlay-wrapper>` and `<vaadin-login-form-wrapper>` to apply styles.\n\nThe following shadow DOM parts of the `<vaadin-login-overlay-wrapper>` are available for styling:\n\nPart name       | Description\n----------------|---------------------------------------------------------|\n`card`          | Container for the entire component's content\n`brand`         | Container for application title and description\n`form`          | Container for the `<vaadin-login-form>` component\n\nSee [Styling Components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components) documentation.\n\nSee [`<vaadin-login-form>`](https://cdn.vaadin.com/vaadin-web-components/23.2.0/#/elements/vaadin-login-form)\ndocumentation for  `<vaadin-login-form-wrapper>` stylable parts.",
          "attributes": [
            {
              "name": "action",
              "description": "If set, a synchronous POST call will be fired to the path defined.\nThe `login` event is also dispatched, so `event.preventDefault()` can be called to prevent the POST call.",
              "value": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            {
              "name": "disabled",
              "description": "If set, disable the \"Log in\" button and prevent user from submitting login form.\nIt is re-enabled automatically, when error is set to true, allowing form resubmission\nafter user makes changes.",
              "value": {
                "type": [
                  "boolean"
                ]
              }
            },
            {
              "name": "error",
              "description": "If set, the error message is shown. The message is hidden by default.\nWhen set, it changes the disabled state of the submit button.",
              "value": {
                "type": [
                  "boolean"
                ]
              }
            },
            {
              "name": "no-forgot-password",
              "description": "Whether to hide the forgot password button. The button is visible by default.",
              "value": {
                "type": [
                  "boolean"
                ]
              }
            },
            {
              "name": "no-autofocus",
              "description": "If set, the user name field automatically receives focus when the component is attached to the document.",
              "value": {
                "type": [
                  "boolean"
                ]
              }
            },
            {
              "name": "description",
              "description": "Defines the application description",
              "value": {
                "type": [
                  "string"
                ]
              }
            },
            {
              "name": "opened",
              "description": "True if the overlay is currently displayed.",
              "value": {
                "type": [
                  "boolean"
                ]
              }
            },
            {
              "name": "title",
              "description": "Defines the application title",
              "value": {
                "type": [
                  "string"
                ]
              }
            },
            {
              "name": "theme",
              "description": "The theme variants to apply to the component.",
              "value": {
                "type": [
                  "string",
                  "null",
                  "undefined"
                ]
              }
            }
          ],
          "js": {
            "properties": [
              {
                "name": "action",
                "description": "If set, a synchronous POST call will be fired to the path defined.\nThe `login` event is also dispatched, so `event.preventDefault()` can be called to prevent the POST call.",
                "value": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              {
                "name": "disabled",
                "description": "If set, disable the \"Log in\" button and prevent user from submitting login form.\nIt is re-enabled automatically, when error is set to true, allowing form resubmission\nafter user makes changes.",
                "value": {
                  "type": [
                    "boolean"
                  ]
                }
              },
              {
                "name": "error",
                "description": "If set, the error message is shown. The message is hidden by default.\nWhen set, it changes the disabled state of the submit button.",
                "value": {
                  "type": [
                    "boolean"
                  ]
                }
              },
              {
                "name": "noForgotPassword",
                "description": "Whether to hide the forgot password button. The button is visible by default.",
                "value": {
                  "type": [
                    "boolean"
                  ]
                }
              },
              {
                "name": "noAutofocus",
                "description": "If set, the user name field automatically receives focus when the component is attached to the document.",
                "value": {
                  "type": [
                    "boolean"
                  ]
                }
              },
              {
                "name": "i18n",
                "description": "The object used to localize this component.\nFor changing the default localization, change the entire\n_i18n_ object or just the property you want to modify.\n\nThe object has the following JSON structure (by default it doesn't include `additionalInformation`\nand `header` sections, `header` can be added to override `title` and `description` properties\nin `vaadin-login-overlay`):\n\n```\n{\n  header: {\n    title: 'App name',\n    description: 'Inspiring application description'\n  },\n  form: {\n    title: 'Log in',\n    username: 'Username',\n    password: 'Password',\n    submit: 'Log in',\n    forgotPassword: 'Forgot password'\n  },\n  errorMessage: {\n    title: 'Incorrect username or password',\n    message: 'Check that you have entered the correct username and password and try again.'\n  },\n  additionalInformation: 'In case you need to provide some additional info for the user.'\n}\n```",
                "value": {
                  "type": [
                    "LoginI18n"
                  ]
                }
              },
              {
                "name": "description",
                "description": "Defines the application description",
                "value": {
                  "type": [
                    "string"
                  ]
                }
              },
              {
                "name": "opened",
                "description": "True if the overlay is currently displayed.",
                "value": {
                  "type": [
                    "boolean"
                  ]
                }
              },
              {
                "name": "title",
                "description": "Defines the application title",
                "value": {
                  "type": [
                    "string"
                  ]
                }
              }
            ],
            "events": [
              {
                "name": "forgot-password",
                "description": "Fired when user clicks on the \"Forgot password\" button."
              },
              {
                "name": "login",
                "description": "Fired when an user submits the login.\nThe event contains `username` and `password` values in the `detail` property."
              },
              {
                "name": "description-changed",
                "description": "Fired when the `description` property changes."
              }
            ]
          }
        }
      ]
    }
  }
}