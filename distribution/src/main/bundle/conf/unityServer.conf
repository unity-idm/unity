#######################################
# Server general settings
#######################################

unityServer.core.mailConfig=${CONF}/mail.properties
unityServer.core.templatesFile=${CONF}/msgTemplates.properties
unityServer.core.pkiConfigFile=${CONF}/pki.properties
unityServer.core.workspaceDirectory=${STATE}/workspace
unityServer.core.i18nMessagesDirectory=${CONF}/i18n
unityServer.core.defaultWebContentDirectory=${STATE}/webContents

unityServer.core.asyncStateUpdateInterval=60

# (!!) Note that addresses defined below should be updated
unityServer.core.httpServer.host=localhost
unityServer.core.httpServer.port=2443
unityServer.core.httpServer.advertisedHost=localhost:2443

unityServer.core.credential=MAIN
unityServer.core.truststore=MAIN

unityServer.core.enabledLocales.1=en English
unityServer.core.enabledLocales.2=pl Polski
unityServer.core.enabledLocales.3=de Deutsch
unityServer.core.defaultLocale=en

unityServer.core.initialAdminUsername=admin
unityServer.core.initialAdminPassword=the!unity

unityServer.storage.engine=rdbms
unityServer.storage.engine.rdbms.jdbcUrl=jdbc:h2:file:${STATE}/data/unitydb.bin;LOCK_TIMEOUT=10000

#unityServer.core.mobileConfirmationRequestLimit=3
#unityServer.core.emailConfirmationRequestLimit=3
#unityServer.core.defaultPostConfirmationReturnURL=
#unityServer.core.automaticRedirectAfterConfirmation=false

#unityServer.core.accountRemovedNotification=accountRemoved
#unityServer.core.accountDisabledNotification=
#unityServer.core.accountActivatedNotification=

#######################################
# Extension and initialization scripts
#######################################

# -> you can define some here, but defaults are in your enabled modules at the end



#######################################
#######################################
# Initial system contents setup
#######################################
#######################################

# The following options are used only to populate initial settings of the system.  
# After the first start use either Console UI or REST Admin API to modify it - changes in 
# the settings below won't be reflected.
#
# If you prefer to have those options applied on every restart, overwriting what was
# configured/modified at runtime, uncomment the following line, setting it to false: 

#unityServer.core.useConfiguredContentsOnFreshStartOnly=false



#######################################
# Authenticators
#######################################

# Standard authenticators commonly used by default in various modules. 
# Other may be defined directly in modules.

unityServer.core.authenticators.pwd.authenticatorName=pwd
unityServer.core.authenticators.pwd.authenticatorType=password
unityServer.core.authenticators.pwd.localCredential=sys:password
unityServer.core.authenticators.pwd.configurationFile=${CONF}/authenticators/passwordRetrieval.properties

unityServer.core.authenticators.cert.authenticatorName=cert
unityServer.core.authenticators.cert.authenticatorType=certificate
unityServer.core.authenticators.cert.localCredential=Certificate credential
unityServer.core.authenticators.cert.configurationFile=${CONF}/authenticators/certificateRetrieval.properties


#######################################
# Realms
#######################################

unityServer.core.realms.1.realmName=defaultRealm
unityServer.core.realms.1.blockAfterUnsuccessfulLogins=4
unityServer.core.realms.1.blockFor=30
unityServer.core.realms.1.maxInactivity=3600
#unityServer.core.realms.1.enableRememberMeFor=3
unityServer.core.realms.1.machineRememberPolicy=allowForWholeAuthn

unityServer.core.realms.2.realmName=adminRealm
unityServer.core.realms.2.blockAfterUnsuccessfulLogins=4
unityServer.core.realms.2.blockFor=30
unityServer.core.realms.2.maxInactivity=1800
#unityServer.core.realms.2.enableRememberMeFor=
unityServer.core.realms.1.machineRememberPolicy=disallow

#######################################
# Endpoints
#######################################

# -> see in your enabled modules below


#######################################
# Modules
#######################################

# Modules provide pre-configured features, so those can be easily enabled with a single line here
# Modules are simply a convention for configuration management: you can copy and paste each module contents
# directly to this file.

# Enables standard credentials and credential requirements
$include.credential=${CONF}/modules/credential.module

# Enables common attribute types
$include.attributeType=${CONF}/modules/attributeType.module

# Enables core endpoints with Unity management features
$include.core=${CONF}/modules/core.module

# Enables OAuth AS functionality
$include.oauthAS=${CONF}/modules/oauthAS.module

# Enables external OAuth authentication (needs to be updated)
# $include.extOAuth=${CONF}/modules/oauthAuthenticator.module

# Enables SAML IdP functionality
$include.samlIdP=${CONF}/modules/samlIdP.module

# Enables external Web SAML authentication (needs to be updated)
# $include.extSAML=${CONF}/modules/samlAuthenticator.module


# Enables loading of demonstrative contents
# $include.demoContents=${CONF}/modules/demoContents.module
